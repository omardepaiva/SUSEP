version: "3.7"

services:
  proxy:
    image: httpd
    container_name: proxy
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ${HTTPD_CONF}:/usr/local/apache2/conf/httpd.conf
      - ${HTTPD_SSL_CONF}:/usr/local/apache2/conf/extra/httpd-ssl.conf
      - ${SSL_CERT}:/usr/local/apache2/conf/server.crt
      - ${SSL_KEY}:/usr/local/apache2/conf/server.key
    networks:
      - container
    dns:
      - ${DNS1}
      - ${DNS2}
  node:
    image: "node:19"
    user: ${NODE_USER}
    working_dir: /home/node/app
    environment:
      - NODE_ENV=production
    volumes:
      - ./:/home/node/app/server.ts
      - ./package.json:/home/node/app/package.json
    ports:
      - 3000:3000/tcp
    command: "npm install && npm start"
    networks:
      - container
  # prisma:
  #   image: prismagraphql/prisma:__LATEST_PRISMA_VERSION__
  #   restart: always
  #   ports:
  #     - "4466:4466"
  #   environment:
  #     PRISMA_CONFIG: |

  #       port: __YOUR_PRISMA_SERVER_PORT__
  #       databases:
  #         default:
  #           connector: __YOUR_DATABASE_CONNECTOR__
  #           host: __YOUR_DATABASE_HOST__
  #           port: __YOUR_DATABASE_PORT__
  #           user: __YOUR_DATABASE_USER__
  #           password: __YOUR_DATABASE_PASSWORD__

  db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: db
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=omar7410!
    ports:
      - 1433:1433
    volumes:
      - ./:/app
    networks:
      - container

volumes:
  httpdconf:
  httpdhtml:

networks:
  container:
    driver: bridge
# node:
#   image: "node:19"
#   user: ${NODE_USER}
#   working_dir: ${WORKDIR}
#   environment:
#     - NODE_ENV=production
#   volumes:
#     - ./:${WORKDIR}
#   ports:
#     - 3000:3000/tcp
#   command: /bin/bash -c "npm install && npm start && apt-get update && apt-get install openssl "
#   networks:
#     - container
